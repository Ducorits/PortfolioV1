> Networking: because even computers need to talk things out.

**NetPractice** is a practical and interactive introduction to the fundamentals of computer networking. This project involved fixing broken network configurations across ten levels using a browser-based simulator.

Rather than writing code, this challenge was about understanding **IP addressing**, **subnetting**, and **how routing works** ‚Äî all the hidden wiring behind how devices communicate.

## üåê What It Involved

- Learning how **TCP/IP addressing** works
- Manually configuring small networks (hosts, switches, routers) using simulated topologies
- Debugging misconfigured IPs, subnets, and routing tables
- Validating connectivity through the interface‚Äôs live feedback and logs
- Exporting working configurations after each level

Each level presented a broken network with a specific goal ‚Äî for example:

![Example level](assets/NetPractice.png)

- Make all Hosts reach each other
- Route traffic through multiple routers
- Correct subnet mismatches or gateway misconfigurations

## üß† Skills & Tools

While there was no code to write, the project built core intuition around:

- IP classes and binary subnet math
- Default gateways
- Routing across multiple hops
- How hosts interact via ARP and routing tables

## üì¶ Deliverables

- Ten `.cfg` files (one for each level), exported from the simulator
- Each file captures the state of your corrected network setup
- Submitted in a Git repository as per the guidelines

## üïí Evaluation

During the defense:

- You're given 15 minutes to solve 3 randomly selected levels from scratch
- No internet or external tools allowed (except basic calculator like `bc`)
- Success depends on quick IP math and correct routing instincts

---

Although deceptively simple, this project gave me a rock-solid foundation in practical networking concepts ‚Äî a skillset that‚Äôs useful whether you're debugging Docker containers or deploying across cloud instances.
